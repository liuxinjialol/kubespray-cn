---
- name: Ensure Nexus o/s group exists
  group:
    name: "{{ nexus_os_group }}"
    state: present

- name: Ensure Nexus o/s user exists
  user:
    name: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    shell: "/bin/bash"
    state: present

- name: Ensure Nexus installation directory exists
  file:
    path: "{{ nexus_installation_dir }}"
    state: "directory"

- name: Check if SystemD service is installed
  stat:
    path: /etc/systemd/system/nexus.service
  register: nexus_systemd_service_file

- name: Unpack Nexus download
  unarchive:
    src: "{{ playbook_dir }}/files/{{ nexus_package }}"
    dest: "{{ nexus_installation_dir }}"
    creates: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    force: no
    copy: false

- name: Stop systemd service
  shell: 'systemctl stop nexus.service'
  when: nexus_systemd_service_file.stat.exists
     
- name: Update symlink nexus-latest
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest"
    src: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: link
  register: nexus_latest_version

- name: Delete unpacked data directory
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/data"
    state: absent

- name: Get path to default settings
  set_fact:
    nexus_default_settings_file: "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"

- name: Get application settings directories
  set_fact:
    nexus_app_dir_settings_dirs:
      - "{{ nexus_installation_dir }}/nexus-latest/etc"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/karaf"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/jetty"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/fabric"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/logback"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"

- name: Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0755"
    recurse: false
  with_items: "{{ nexus_app_dir_settings_dirs }}"

- block:
  - name: Clean {{ nexus_installation_dir }}/sonatype-work
    file:
      state: absent
      path: "{{ nexus_installation_dir }}/sonatype-work/"
 
# The extracted directory structure: "{{nexus_installation_dir}}/sonatype-work/nexus3"
  - name: unpack nexus data tar
    unarchive:
      src: "{{ playbook_dir }}/files/sonatype-work.tar.gz"
      dest: "{{nexus_installation_dir}}"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"
      force: yes
      directory_mode: 0777
      mode: 0777
      creates: "{{nexus_installation_dir}}/sonatype-work"
  when: not nexus_systemd_service_file.stat.exists    

- name: Setup Nexus data directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-Dkaraf.data=.*"
    line: "-Dkaraf.data={{ nexus_data_dir }}"

- name: Setup JVM logfile directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-XX:LogFile=.*"
    line: "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"

#- name: Setup Nexus default timezone
#  lineinfile:
#    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
#    regexp: "^-Duser.timezone=.*"
#    line: "-Duser.timezone={{ nexus_timezone }}"

- name: Create Nexus tmp/backup directory
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
  with_items:
  - "{{ nexus_tmp_dir }}"
  - "{{ nexus_backup_dir }}"

- name: Setup Nexus tmp directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-Djava.io.tmpdir=.*"
    line: "-Djava.io.tmpdir={{ nexus_tmp_dir }}"

- name: Set NEXUS_HOME for the service user
  lineinfile:
    dest: "/home/{{ nexus_os_user }}/.bashrc"
    regexp: "^export NEXUS_HOME=.*"
    line: "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"

- name: Set nexus user
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc"
    regexp: ".*run_as_user=.*"
    line: "run_as_user=\"{{ nexus_os_user }}\""

- name: Set nexus port
  lineinfile:
    dest: "{{ nexus_default_settings_file }}"
    regexp: "^application-port=.*"
    line: "application-port={{ nexus_default_port }}"

- name: Set nexus context path
  lineinfile:
    dest: "{{ nexus_default_settings_file }}"
    regexp: "^nexus-context-path=.*"
    line: "nexus-context-path={{ nexus_default_context_path }}"

- name: Create systemd service configuration
  template:
    src: "nexus.service"
    dest: "/etc/systemd/system"

# systemd available from ansible 2.2 only
# - name: Enable nexus service
#   systemd: name=nexus daemon_reload=yes enabled=yes state=started

- name: "Register scripts to be deployed"
  set_fact:
    nexus_deployed_scripts:
      - nexus-blob-backup.sh
      - nexus-blob-restore.sh

- name: "Deploy scripts"
  template:
    src: "{{ item }}.j2"
    dest: "{{ nexus_script_dir }}/{{ item }}"
    mode: 0755
  with_items: "{{ nexus_deployed_scripts }}"

- name: "Symlink scripts to /sbin"
  file:
    src: "{{ nexus_script_dir }}/{{ item }}"
    dest: "/sbin/{{ item }}"
    state: link
  with_items: "{{ nexus_deployed_scripts }}"

- name: Reload systemd service configuration
  shell: 'systemctl daemon-reload'

- name: Enable systemd service
  shell: 'systemctl enable nexus.service'

- name: Restart systemd service
  shell: 'systemctl restart nexus.service'

- name: Waiting for Nexus service to be ready...
  wait_for:
    path: "{{ nexus_data_dir }}/log/nexus.log"
    search_regex: "Started Sonatype Nexus OSS .*"
    timeout: 1800

- name: Waiting for nexus to be ready...
  wait_for:
    port: "{{ nexus_default_port }}"
    delay: 5

- name: Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/etc"
    owner: "root"
    group: "root"
    mode: "0644"
    recurse: true

- name: Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
    recurse: false
  with_items: "{{ nexus_app_dir_settings_dirs }}"

