#
# pass a file containing the variables by passing @filename.yml as the argument to -e:
#   ansible-playbook greet.yml -e @greetvars.yml
ingress_nginx_enabled: true
# Following configuration is required for kubeadm
ingress_nginx_tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Equal"
    value: ""
    effect: "NoSchedule"

# kubectl
kubeconfig_localhost: true
kubectl_localhost: true

# enable helm
helm_enabled: true
helm_stable_repo_url: "http://proxy.auslides.com:8081/repository/a-store-group"

# enable network policy
enable_network_policy: true

# enable persistent volumes
#persistent_volumes_enabled: true
#local_volume_provisioner_enabled: true
#
# Each node downloads binaries and container images on its own, which is download_run_once: False. Override the download_run_once: True to download container images only once then push to cluster nodes in batches. The default delegate node for pushing images is the first kube-master.
# NOTE: We have had a images cache server, so we set it to False.
download_run_once: False
# If your ansible runner node (aka the admin node) have password-less sudo and docker enabled, you may want to define the download_localhost: True, which makes that node a delegate for pushing images
# NOTE: This setting cause the images also uploaded from node1 to localhost (the admin node). It takes much time, so we set to False.
download_localhost: False
#
my_cluster: "mycluster"
# the repository proxy server domain or IP - located on the Ansible controller machine
# TODO:
#   Where locate the proxy nodes, registry nodes, and the Ansible control node?
#
repository_proxy_url: "proxy.auslides.com"
repository_proxy_ip: "192.168.100.10"
repository_proxy_port: 8081
repository_proxy_registry_port: 9090
repository_proxy_registry_port_external: 5000
loadbalance_vip: "192.168.100.10"
kube_apiserver_port: 6443
#
apiserver_loadbalancer_domain_name: "192.168.100.10"
supplementary_addresses_in_ssl_keys: ["{{ loadbalance_vip }}"]
#the loadbalancer_apiserver considered mutually exclusive to loadbalancer_apiserver_localhost.
loadbalancer_apiserver_localhost: False
loadbalancer_apiserver:
  address: "{{ loadbalance_vip }}"
  port: "{{kube_apiserver_port}}"

container_registry_host: ""
container_registry_port: {{ repository_proxy_registry_port_external }}

docker_insecure_registries:
    - "{{repository_proxy_url}}:{{repository_proxy_registry_port}}"
    - "{{repository_proxy_ip}}:{{repository_proxy_registry_port}}"
    - "{{repository_proxy_url}}:{{repository_proxy_registry_port_external}}"
    - "{{repository_proxy_ip}}:{{repository_proxy_registry_port_external}}"

docker_registry_mirrors:
   - "http://{{repository_proxy_url}}:{{repository_proxy_registry_port}}"
   - "http://{{repository_proxy_url}}:{{repository_proxy_registry_port_external}}"
